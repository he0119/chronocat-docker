name: Build

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Fecth latest chronocat version
        id: version
        shell: python
        run: |
          import urllib.request, json, os
          res = urllib.request.urlopen("https://api.github.com/repos/chrononeko/chronocat/releases?per_page=1").read()
          releases = json.loads(res)
          version = releases[0]["tag_name"]
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              f.write(f"version={version}\n")

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Tags
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: |
            ${{ github.repository_owner }}/chronocat-docker
            ghcr.io/${{ github.repository_owner }}/chronocat-docker
          tags: |
            latest
            ${{ steps.version.outputs.version }}

      - name: Build and Publish
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            CHRONOCAT_VERSION=${{ steps.version.outputs.version }}
